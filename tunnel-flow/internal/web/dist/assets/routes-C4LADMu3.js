import{az as _,r as p,c as f}from"./vendor-CVfcT1hl.js";import{a as g,r as h}from"./index-CCZm0Y1N.js";const q=_("clients",()=>{const n=p([]),c=p([]),i=p(!1),l=p(null),u=p({page:1,pageSize:20,total:0}),S=f(()=>c.value.filter(e=>e.status==="online")),C=f(()=>c.value.filter(e=>e.status==="offline")),R=f(()=>c.value.filter(e=>e.enabled===0)),y=f(()=>c.value.filter(e=>e.enabled===1)),F=f(()=>({total:c.value.length,online:S.value.length,offline:C.value.length,disabled:R.value.length,enabled:y.value.length})),w=async(e={})=>{try{i.value=!0,l.value=null;const a={page:u.value.page,page_size:u.value.pageSize,...e},s=await g.get("/clients",{params:a});Array.isArray(s.data)?(n.value=s.data,e.status||(c.value=s.data),u.value.total=s.data.length):s.data&&s.data.clients?(n.value=s.data.clients,e.status||(c.value=s.data.clients),u.value.total=s.data.total||s.data.clients.length):(n.value=[],u.value.total=0)}catch(a){l.value=a.message||"获取客户端列表失败",console.error("Failed to fetch clients:",a)}finally{i.value=!1}},x=async()=>{try{const e=await g.get("/clients");Array.isArray(e.data)?c.value=e.data:e.data&&e.data.clients?c.value=e.data.clients:c.value=[]}catch(e){console.error("Failed to fetch all clients for stats:",e)}};return{clients:n,allClients:c,loading:i,error:l,pagination:u,onlineClients:S,offlineClients:C,disabledClients:R,enabledClients:y,clientsStats:F,fetchClients:w,fetchAllClients:x,fetchClientsByStatus:async(e="")=>{c.value.length===0&&await x();const a={};e&&(a.status=e),await w(a)},getClientById:async e=>{try{return(await g.get(`/clients/${e}`)).data}catch(a){throw l.value=a.message||"获取客户端详情失败",console.error("Failed to get client:",a),a}},createClient:async e=>{try{const a=await g.post("/clients",e);return n.value.unshift(a.data),u.value.total++,a.data}catch(a){throw l.value=a.message||"创建客户端失败",console.error("Failed to create client:",a),a}},updateClient:async(e,a)=>{try{const s=await g.put(`/clients/${e}`,a),d=n.value.findIndex(m=>m.client_id===e);return d!==-1&&(n.value[d]={...n.value[d],...s.data}),s.data}catch(s){throw l.value=s.message||"更新客户端失败",console.error("Failed to update client:",s),s}},deleteClient:async e=>{try{await g.delete(`/clients/${e}`);const a=n.value.findIndex(s=>s.client_id===e);a!==-1&&(n.value.splice(a,1),u.value.total--)}catch(a){throw l.value=a.message||"删除客户端失败",console.error("Failed to delete client:",a),a}},updateClientStatus:async(e,a)=>{try{const s=await g.put(`/clients/${e}/status`,{status:a}),d=n.value.findIndex(m=>m.client_id===e);return d!==-1&&(n.value[d].status=a,n.value[d].updated_at=new Date().toISOString()),s.data}catch(s){throw l.value=s.message||"更新客户端状态失败",console.error("Failed to update client status:",s),s}},updateClientEnabled:async(e,a)=>{try{const s=await g.put(`/clients/${e}/enabled`,{enabled:a}),d=n.value.findIndex(m=>m.client_id===e);return d!==-1&&(n.value[d].enabled=a,n.value[d].updated_at=new Date().toISOString()),s.data}catch(s){throw l.value=s.message||"更新客户端启用状态失败",console.error("Failed to update client enabled status:",s),s}},sendMessageToClient:async(e,a)=>{try{return(await g.post(`/clients/${e}/message`,{type:"control",payload:a})).data}catch(s){throw l.value=s.message||"发送消息失败",console.error("Failed to send message to client:",s),s}},refreshClients:()=>w(),setPage:e=>(u.value.page=e,w()),setPageSize:e=>(u.value.pageSize=e,u.value.page=1,w()),clearError:()=>{l.value=null}}}),M=_("routes",()=>{const n=p([]),c=p(!1),i=p(null),l=p({page:1,pageSize:20,total:0}),u=f(()=>n.value.filter(r=>r.status==="active")),S=f(()=>n.value.filter(r=>r.status==="inactive")),C=f(()=>({total:n.value.length,active:u.value.length,inactive:S.value.length})),R=f(()=>{const r={};return n.value.forEach(t=>{r[t.client_id]||(r[t.client_id]=[]),r[t.client_id].push(t)}),r}),y=async(r={})=>{var t,o;try{c.value=!0,i.value=null;const v={page:l.value.page,page_size:l.value.pageSize,...r},e=await h.get("/routes",{params:v});n.value=((t=e.data)==null?void 0:t.routes)||[],l.value.total=((o=e.data)==null?void 0:o.total)||0}catch(v){i.value=v.message||"获取路由列表失败",console.error("Failed to fetch routes:",v)}finally{c.value=!1}};return{routes:n,loading:c,error:i,pagination:l,activeRoutes:u,inactiveRoutes:S,routesStats:C,routesByClient:R,fetchRoutes:y,getRouteById:async r=>{try{return(await h.get(`/routes/${r}`)).data}catch(t){throw i.value=t.message||"获取路由详情失败",console.error("Failed to get route:",t),t}},createRoute:async r=>{try{const t=await h.post("/routes",r);return n.value.unshift(t.data),l.value.total++,t.data}catch(t){throw i.value=t.message||"创建路由失败",console.error("Failed to create route:",t),t}},updateRoute:async(r,t)=>{try{const o=await h.put(`/routes/${r}`,t),v=n.value.findIndex(e=>e.id===r);return v!==-1&&(n.value[v]={...n.value[v],...o.data}),o.data}catch(o){throw i.value=o.message||"更新路由失败",console.error("Failed to update route:",o),o}},deleteRoute:async r=>{try{await h.delete(`/routes/${r}`);const t=n.value.findIndex(o=>o.id===r);t!==-1&&(n.value.splice(t,1),l.value.total--)}catch(t){throw i.value=t.message||"删除路由失败",console.error("Failed to delete route:",t),t}},activateRoute:async r=>{try{await h.post(`/routes/${r}/activate`);const t=n.value.findIndex(o=>o.id===r);t!==-1&&(n.value[t].status="active",n.value[t].updated_at=new Date().toISOString())}catch(t){throw i.value=t.message||"激活路由失败",console.error("Failed to activate route:",t),t}},deactivateRoute:async r=>{try{await h.post(`/routes/${r}/deactivate`);const t=n.value.findIndex(o=>o.id===r);t!==-1&&(n.value[t].status="inactive",n.value[t].updated_at=new Date().toISOString())}catch(t){throw i.value=t.message||"停用路由失败",console.error("Failed to deactivate route:",t),t}},getRouteStats:async(r,t="24h")=>{try{return(await h.get(`/routes/${r}/stats`,{params:{time_range:t}})).data}catch(o){throw i.value=o.message||"获取路由统计失败",console.error("Failed to get route stats:",o),o}},refreshRoutes:()=>y(),setPage:r=>(l.value.page=r,y()),setPageSize:r=>(l.value.pageSize=r,l.value.page=1,y()),clearError:()=>{i.value=null}}});export{M as a,q as u};

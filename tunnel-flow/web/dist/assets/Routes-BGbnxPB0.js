import{E as v,k as K,p as Pe,r as Fe,l as ie,n as de,w as pe,d as Oe,o as Ie,h as ve,q as Ae,t as fe,g as Je}from"./elementPlus-ZBiduQnq.js";import{a as Me,u as Ge}from"./routes-CamlQmG2.js";import{a as F}from"./index-DdU4QHiA.js";import{_ as qe}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{r as g,c as O,h as He,z as V,A as x,B as s,L as I,R as t,J as a,al as b,P as i,K as Qe,ar as Ye,u as p,I as W,Q as Ke,a6 as We,O as r}from"./vendor-CVfcT1hl.js";const Xe={class:"routes-page"},Ze={class:"client-selection"},et={class:"client-selector-row"},tt={class:"client-selector"},lt={class:"client-option"},at={class:"client-status-info"},st={class:"client-actions"},ot={key:0,class:"stats-cards"},nt={class:"stat-card"},rt={class:"stat-icon active"},ut={class:"stat-content"},it={class:"stat-value"},dt={class:"stat-card"},pt={class:"stat-icon total"},vt={class:"stat-content"},ft={class:"stat-value"},ct={class:"stat-card"},mt={class:"stat-icon inactive"},_t={class:"stat-content"},gt={class:"stat-value"},bt={key:1,class:"search-section"},yt={class:"search-left"},wt={class:"search-right"},ht={key:2,class:"table-container"},xt={class:"route-path"},Ct={class:"path-text"},Vt={class:"target-url"},St={class:"action-buttons"},Tt={class:"pagination-container"},Rt={key:3,class:"no-client-selected"},$t={class:"form-tip"},Ut={class:"form-tip"},Et={key:0},kt={key:1},Dt={class:"dialog-footer"},zt={key:0,class:"route-test"},Nt={class:"test-info"},jt={class:"test-form"},Bt={class:"test-actions"},Lt={key:0,class:"test-result"},Pt={class:"response-content"},Ft={__name:"Routes",setup(Ot){const h=Me(),A=Ge(),y=g(""),D=g(""),U=g(""),J=g(""),m=g([]),z=g([]),E=g(!1),G=g(!1),k=g(!1),q=g(!1),H=g(!1),N=g(),$=g(null),R=g(null),Q=g({base_url:window.location.origin,proxy_url:null}),c=g({url_suffix:"",targets_json:"",client_id:"",strategy:"first_available",route_mode:"basic",enabled:!0,description:""}),w=g({method:"GET",headers:"",body:""}),ce={url_suffix:[{required:!0,message:"请输入服务器路径",trigger:"blur"},{pattern:/^\//,message:"路径必须以 / 开头",trigger:"blur"},{validator:(l,e,n)=>{if(e&&e.includes("*")&&e.split("*").length>5){n(new Error("通配符使用过多，请简化路径模式"));return}n()},trigger:"blur"}],targets_json:[{required:!0,message:"请输入目标地址",trigger:"blur"},{validator:(l,e,n)=>{if(!e||e.trim()===""){n(new Error("请输入目标地址"));return}const d=c.value.route_mode,_=e.trim();if(d==="basic"){if(_.match(/^https?:\/\/[^\/]+:\d+\/?$/)){n();return}}else if(_.match(/^https?:\/\/.+/)){n();return}try{const u=JSON.parse(e);if(Array.isArray(u)&&u.length>0){for(const f of u){if(!f.url){n(new Error("每个目标必须包含url字段"));return}if(d==="basic"){if(!f.url.match(/^https?:\/\/[^\/]+:\d+\/?$/)){n(new Error("基础模式下目标地址格式应为: http://ip:port"));return}}else if(!f.url.match(/^https?:\/\/.+/)){n(new Error("完整模式下目标地址必须是有效的HTTP(S) URL"));return}}n();return}}catch{}n(d==="basic"?new Error("基础模式下目标地址格式应为: http://ip:port"):new Error("完整模式下目标地址必须是有效的HTTP(S) URL"))},trigger:"blur"}]},j=O(()=>Q.value.proxy_url||Q.value.base_url),X=O(()=>A.clients||[]),B=O(()=>X.value.find(l=>l.client_id===y.value)),Y=O(()=>{const l=z.value;return{total:l.length,active:l.filter(e=>e.enabled===1).length,inactive:l.filter(e=>e.enabled===0).length}}),me=O(()=>{let l=z.value;if(U.value&&(U.value==="enabled"?l=l.filter(e=>e.enabled===1):U.value==="disabled"&&(l=l.filter(e=>e.enabled===0))),J.value&&(l=l.filter(e=>e.route_mode===J.value)),D.value){const e=D.value.toLowerCase();l=l.filter(n=>n.url_suffix.toLowerCase().includes(e)||te(n.targets_json).toLowerCase().includes(e)||n.description&&n.description.toLowerCase().includes(e))}return l}),Z=l=>{if(!l)return"";let e;if(typeof l=="number"){if(l<=86400)return"";e=new Date(l<1e10?l*1e3:l)}else e=new Date(l);if(isNaN(e.getTime())||e.getFullYear()<=1970&&e.getMonth()===0&&e.getDate()===1)return"";const n=e.getFullYear(),d=String(e.getMonth()+1).padStart(2,"0"),_=String(e.getDate()).padStart(2,"0"),u=String(e.getHours()).padStart(2,"0"),f=String(e.getMinutes()).padStart(2,"0"),C=String(e.getSeconds()).padStart(2,"0");return`${n}-${d}-${_} ${u}:${f}:${C}`},_e=l=>{const e=A.clients.find(n=>n.id===l);return e?e.name||e.id:"未知客户端"},ge=()=>B.value?B.value.name||B.value.client_id:"",ee=()=>B.value?B.value.status:"offline",te=l=>{if(!l)return"-";try{const e=JSON.parse(l);return Array.isArray(e)&&e.length>0?e.length===1?e[0].url:`${e[0].url} (+${e.length-1}个)`:"-"}catch{return l}},be=async l=>{l?await M(l):z.value=[],D.value="",U.value="",m.value=[]},ye=async()=>{try{const l=await F.get("/server-info");l.data&&(Q.value={base_url:l.data.base_url||window.location.origin,proxy_url:l.data.proxy_url||null})}catch(l){console.error("获取服务器信息失败:",l)}},M=async l=>{try{h.loading=!0;const e=await F.get(`/routes?client_id=${l}`);z.value=e.data||[]}catch(e){console.error("加载客户端路由失败:",e),v.error("加载客户端路由失败"),z.value=[]}finally{h.loading=!1}},we=async()=>{try{await A.fetchClients(),y.value&&await M(y.value),v.success("数据已刷新")}catch{v.error("刷新数据失败")}},he=()=>{},le=()=>{},xe=l=>{m.value=l},Ce=l=>{h.setPageSize(l)},Ve=l=>{h.setPage(l)},Se=()=>{if(!y.value){v.warning("请先选择客户端");return}k.value=!1,c.value={url_suffix:"",targets_json:"",client_id:y.value,strategy:"first_available",route_mode:"basic",enabled:!0,description:""},E.value=!0},Te=l=>{k.value=!0;let e=l.targets_json;try{const n=JSON.parse(l.targets_json);Array.isArray(n)&&n.length>0&&n[0].url&&(e=n[0].url)}catch{e=l.targets_json}c.value={id:l.id,url_suffix:l.url_suffix,targets_json:e,client_id:l.client_id,route_mode:l.route_mode||"basic",enabled:l.enabled===1,description:l.description||""},E.value=!0},Re=async()=>{if(N.value)try{await N.value.validate(),q.value=!0;const l={...c.value};l.enabled=l.enabled?1:0,k.value?(await h.updateRoute(l.id,l),v.success("路由更新成功")):(await h.createRoute(l),v.success("路由创建成功")),E.value=!1,y.value&&await M(y.value)}catch(l){l!=="validation failed"&&v.error(k.value?"路由更新失败":"路由创建失败")}finally{q.value=!1}},$e=async l=>{try{await K.confirm(`确定要删除路由 "${l.server_path}" 吗？此操作不可恢复。`,"确认删除",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}),await h.deleteRoute(l.id),v.success("路由已删除"),y.value&&await M(y.value)}catch(e){e!=="cancel"&&v.error("删除路由失败")}},Ue=async()=>{try{await K.confirm(`确定要删除选中的 ${m.value.length} 个路由吗？此操作不可恢复。`,"批量删除确认",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"});const l=m.value.map(e=>h.deleteRoute(e.id));await Promise.all(l),v.success("批量删除成功"),m.value=[]}catch(l){l!=="cancel"&&v.error("批量删除失败")}},ae=()=>{E.value=!1,N.value&&N.value.resetFields()},Ee=async l=>{try{const e=`${j.value}${l}`;await navigator.clipboard.writeText(e),v.success("路径已复制到剪贴板")}catch{v.error("复制失败")}},ke=l=>{$.value=l,w.value={method:"GET",headers:"",body:""},R.value=null,G.value=!0},De=async()=>{var l,e;if($.value)try{H.value=!0;const n=Date.now();let d={};if(w.value.headers)try{d=JSON.parse(w.value.headers)}catch{v.error("请求头格式错误，请使用有效的JSON格式");return}const _={method:w.value.method,url:`${j.value}${$.value.server_path}`,headers:d};w.value.method!=="GET"&&w.value.body&&(_.data=w.value.body);const u=await F.request(_),f=Date.now();R.value={status:u.status,duration:f-n,response:JSON.stringify(u.data,null,2)},v.success("测试完成")}catch(n){const d=Date.now();R.value={status:((l=n.response)==null?void 0:l.status)||0,duration:d-Date.now(),response:(e=n.response)!=null&&e.data?JSON.stringify(n.response.data,null,2):n.message},v.error("测试失败")}finally{H.value=!1}},ze=async(l,e)=>{try{l.toggling=!0;const n=await F.put(`/routes/${l.id}/enabled`,{enabled:e});(n.status===204||n.status===200)&&(l.enabled=e?1:0,v.success(e?"路由已启用":"路由已禁用"))}catch(n){console.error("切换路由状态失败:",n),v.error("操作失败")}finally{l.toggling=!1}},se=async l=>{if(m.value.length===0){v.warning("请先选择要操作的路由");return}try{const e=l?"启用":"禁用";await K.confirm(`确定要${e}选中的 ${m.value.length} 个路由吗？`,`批量${e}路由`,{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"});const n=m.value.map(_=>_.id);(await F.put("/routes/batch/enabled",{route_ids:n,enabled:l})).data&&(m.value.forEach(_=>{_.enabled=l?1:0}),v.success(`成功${e}了 ${m.value.length} 个路由`),m.value=[])}catch(e){e!=="cancel"&&(console.error("批量操作失败:",e),v.error("批量操作失败"))}};return He(async()=>{await ye(),await A.fetchClients()}),(l,e)=>{const n=b("el-tag"),d=b("el-option"),_=b("el-select"),u=b("el-icon"),f=b("el-button"),C=b("el-input"),S=b("el-table-column"),oe=b("el-switch"),Ne=b("el-table"),je=b("el-pagination"),Be=b("el-empty"),T=b("el-form-item"),ne=b("el-form"),re=b("el-dialog"),L=b("el-descriptions-item"),ue=b("el-descriptions"),Le=Ye("loading");return x(),V("div",Xe,[e[62]||(e[62]=s("div",{class:"page-header"},[s("div",{class:"page-info"},[s("h1",{class:"page-title"},"路由管理"),s("p",{class:"page-description"},"选择客户端后管理其路由配置，设置请求转发规则")])],-1)),s("div",Ze,[e[20]||(e[20]=s("div",{class:"selection-header"},[s("h3",null,"选择客户端"),s("p",null,"请先选择要管理路由的客户端")],-1)),s("div",et,[s("div",tt,[t(_,{modelValue:y.value,"onUpdate:modelValue":e[0]||(e[0]=o=>y.value=o),placeholder:"请选择客户端",style:{width:"300px"},onChange:be,clearable:"",filterable:"","filter-placeholder":"搜索客户端名称..."},{default:a(()=>[(x(!0),V(Ke,null,We(X.value,o=>(x(),W(d,{key:o.client_id,label:`${o.name||o.client_id} (${o.status==="online"?"在线":"离线"})`,value:o.client_id,disabled:o.status!=="online"&&o.enabled!==1},{default:a(()=>[s("div",lt,[s("span",null,i(o.name||o.client_id),1),s("div",at,[t(n,{type:o.status==="online"?"success":o.enabled===1?"warning":"danger",size:"small"},{default:a(()=>[r(i(o.status==="online"?"在线":"离线"),1)]),_:2},1032,["type"])])])]),_:2},1032,["label","value","disabled"]))),128))]),_:1},8,["modelValue"])]),s("div",st,[t(f,{type:"primary",onClick:Se,disabled:!y.value},{default:a(()=>[t(u,null,{default:a(()=>[t(p(Pe))]),_:1}),e[18]||(e[18]=r(" 新建路由 ",-1))]),_:1},8,["disabled"]),t(f,{onClick:we},{default:a(()=>[t(u,null,{default:a(()=>[t(p(Fe))]),_:1}),e[19]||(e[19]=r(" 刷新 ",-1))]),_:1})])])]),y.value?(x(),V("div",ot,[s("div",nt,[s("div",rt,[t(u,null,{default:a(()=>[t(p(ie))]),_:1})]),s("div",ut,[s("div",it,i(Y.value.active),1),e[21]||(e[21]=s("div",{class:"stat-label"},"活跃路由",-1))])]),s("div",dt,[s("div",pt,[t(u,null,{default:a(()=>[t(p(de))]),_:1})]),s("div",vt,[s("div",ft,i(Y.value.total),1),e[22]||(e[22]=s("div",{class:"stat-label"},"总路由",-1))])]),s("div",ct,[s("div",mt,[t(u,null,{default:a(()=>[t(p(pe))]),_:1})]),s("div",_t,[s("div",gt,i(Y.value.inactive),1),e[23]||(e[23]=s("div",{class:"stat-label"},"非活跃路由",-1))])])])):I("",!0),y.value?(x(),V("div",bt,[s("div",yt,[t(C,{modelValue:D.value,"onUpdate:modelValue":e[1]||(e[1]=o=>D.value=o),placeholder:"搜索路由路径或目标地址",style:{width:"300px"},clearable:"",onInput:he},{prefix:a(()=>[t(u,null,{default:a(()=>[t(p(Oe))]),_:1})]),_:1},8,["modelValue"]),t(_,{modelValue:U.value,"onUpdate:modelValue":e[2]||(e[2]=o=>U.value=o),placeholder:"状态筛选",style:{width:"120px"},clearable:"",onChange:le},{default:a(()=>[t(d,{label:"已启用",value:"enabled"}),t(d,{label:"已禁用",value:"disabled"})]),_:1},8,["modelValue"]),t(_,{modelValue:J.value,"onUpdate:modelValue":e[3]||(e[3]=o=>J.value=o),placeholder:"模式筛选",style:{width:"120px"},clearable:"",onChange:le},{default:a(()=>[t(d,{label:"基础模式",value:"basic"}),t(d,{label:"完整模式",value:"full"})]),_:1},8,["modelValue"])]),s("div",wt,[t(f,{type:"success",disabled:m.value.length===0,onClick:e[4]||(e[4]=o=>se(!0))},{default:a(()=>[t(u,null,{default:a(()=>[t(p(Ie))]),_:1}),r(" 批量启用 ("+i(m.value.length)+") ",1)]),_:1},8,["disabled"]),t(f,{type:"warning",disabled:m.value.length===0,onClick:e[5]||(e[5]=o=>se(!1))},{default:a(()=>[t(u,null,{default:a(()=>[t(p(pe))]),_:1}),r(" 批量禁用 ("+i(m.value.length)+") ",1)]),_:1},8,["disabled"]),t(f,{type:"danger",disabled:m.value.length===0,onClick:Ue},{default:a(()=>[t(u,null,{default:a(()=>[t(p(ve))]),_:1}),r(" 批量删除 ("+i(m.value.length)+") ",1)]),_:1},8,["disabled"])])])):I("",!0),y.value?(x(),V("div",ht,[Qe((x(),W(Ne,{data:me.value,onSelectionChange:xe,stripe:"",style:{width:"100%"}},{default:a(()=>[t(S,{type:"selection",width:"55"}),t(S,{prop:"url_suffix",label:"服务器路径","min-width":"200"},{default:a(({row:o})=>[s("div",xt,[t(u,{class:"path-icon"},{default:a(()=>[t(p(ie))]),_:1}),s("span",Ct,i(o.url_suffix),1),t(f,{type:"primary",link:"",size:"small",onClick:P=>Ee(o.url_suffix)},{default:a(()=>[t(u,null,{default:a(()=>[t(p(Ae))]),_:1})]),_:1},8,["onClick"])])]),_:1}),t(S,{prop:"targets_json",label:"目标地址","min-width":"250"},{default:a(({row:o})=>[s("div",Vt,[s("span",null,i(te(o.targets_json)),1),t(f,{type:"primary",link:"",size:"small",onClick:P=>ke(o)},{default:a(()=>[t(u,null,{default:a(()=>[t(p(fe))]),_:1}),e[24]||(e[24]=r(" 测试 ",-1))]),_:1},8,["onClick"])])]),_:1}),t(S,{prop:"route_mode",label:"路由模式",width:"120"},{default:a(({row:o})=>[t(n,{type:o.route_mode==="full"?"primary":"success",size:"small"},{default:a(()=>[r(i(o.route_mode==="full"?"完整模式":"基础模式"),1)]),_:2},1032,["type"])]),_:1}),t(S,{prop:"enabled",label:"启用状态",width:"120"},{default:a(({row:o})=>[t(oe,{"model-value":o.enabled===1,onChange:P=>ze(o,P),loading:o.toggling},null,8,["model-value","onChange","loading"])]),_:1}),t(S,{prop:"description",label:"描述","min-width":"150","show-overflow-tooltip":""},{default:a(({row:o})=>[s("span",null,i(o.description||"-"),1)]),_:1}),t(S,{prop:"created_at",label:"创建时间",width:"180"},{default:a(({row:o})=>[r(i(Z(o.created_at)),1)]),_:1}),t(S,{prop:"updated_at",label:"更新时间",width:"180"},{default:a(({row:o})=>[r(i(Z(o.updated_at)),1)]),_:1}),t(S,{label:"操作",width:"200",fixed:"right"},{default:a(({row:o})=>[s("div",St,[t(f,{type:"primary",size:"small",onClick:P=>Te(o)},{default:a(()=>[t(u,null,{default:a(()=>[t(p(Je))]),_:1}),e[25]||(e[25]=r(" 编辑 ",-1))]),_:1},8,["onClick"]),t(f,{type:"danger",size:"small",onClick:P=>$e(o)},{default:a(()=>[t(u,null,{default:a(()=>[t(p(ve))]),_:1}),e[26]||(e[26]=r(" 删除 ",-1))]),_:1},8,["onClick"])])]),_:1})]),_:1},8,["data"])),[[Le,p(h).loading]]),s("div",Tt,[t(je,{"current-page":p(h).pagination.page,"onUpdate:currentPage":e[6]||(e[6]=o=>p(h).pagination.page=o),"page-size":p(h).pagination.pageSize,"onUpdate:pageSize":e[7]||(e[7]=o=>p(h).pagination.pageSize=o),"page-sizes":[10,20,50,100],total:p(h).pagination.total,layout:"total, sizes, prev, pager, next, jumper",onSizeChange:Ce,onCurrentChange:Ve},null,8,["current-page","page-size","total"])])])):(x(),V("div",Rt,[t(Be,{description:"请先选择要管理的客户端"},{image:a(()=>[t(u,{size:"100",color:"#ccc"},{default:a(()=>[t(p(de))]),_:1})]),_:1})])),t(re,{modelValue:E.value,"onUpdate:modelValue":e[13]||(e[13]=o=>E.value=o),title:k.value?"编辑路由":"新建路由",width:"600px","before-close":ae},{footer:a(()=>[s("div",Dt,[t(f,{onClick:ae},{default:a(()=>[...e[58]||(e[58]=[r("取消",-1)])]),_:1}),t(f,{type:"primary",onClick:Re,loading:q.value},{default:a(()=>[r(i(k.value?"更新":"创建"),1)]),_:1},8,["loading"])])]),default:a(()=>[t(ne,{ref_key:"routeFormRef",ref:N,model:c.value,rules:ce,"label-width":"120px"},{default:a(()=>[t(T,{label:"关联客户端"},{default:a(()=>[t(C,{value:ge(),readonly:"",style:{width:"100%"}},{suffix:a(()=>[t(n,{type:ee()==="online"?"success":"warning",size:"small"},{default:a(()=>[r(i(ee()==="online"?"在线":"离线"),1)]),_:1},8,["type"])]),_:1},8,["value"]),e[27]||(e[27]=s("div",{class:"form-tip"}," 只能选择在线的客户端 ",-1))]),_:1}),t(T,{label:"服务器路径",prop:"url_suffix"},{default:a(()=>[t(C,{modelValue:c.value.url_suffix,"onUpdate:modelValue":e[8]||(e[8]=o=>c.value.url_suffix=o),placeholder:"例如: /api/v1/users 或 /api/*/users 或 /api/**/users"},{prepend:a(()=>[r(i(j.value),1)]),_:1},8,["modelValue"]),s("div",$t,[r(" 完整访问地址: "+i(j.value)+i(c.value.url_suffix),1),e[28]||(e[28]=s("br",null,null,-1)),e[29]||(e[29]=s("strong",null,"支持的匹配模式:",-1)),e[30]||(e[30]=s("br",null,null,-1)),e[31]||(e[31]=r(" • 精确匹配: ",-1)),e[32]||(e[32]=s("code",null,"/api/users",-1)),e[33]||(e[33]=r(" - 只匹配 /api/users",-1)),e[34]||(e[34]=s("br",null,null,-1)),e[35]||(e[35]=r(" • 单段通配符: ",-1)),e[36]||(e[36]=s("code",null,"/api/*/users",-1)),e[37]||(e[37]=r(" - 匹配 /api/v1/users, /api/v2/users 等",-1)),e[38]||(e[38]=s("br",null,null,-1)),e[39]||(e[39]=r(" • 段内通配符: ",-1)),e[40]||(e[40]=s("code",null,"/api/user*",-1)),e[41]||(e[41]=r(" - 匹配 /api/users, /api/user123 等",-1)),e[42]||(e[42]=s("br",null,null,-1)),e[43]||(e[43]=r(" • 双通配符: ",-1)),e[44]||(e[44]=s("code",null,"/api/**/users",-1)),e[45]||(e[45]=r(" - 匹配 /api/users, /api/v1/users, /api/v1/v2/users 等",-1)),e[46]||(e[46]=s("br",null,null,-1)),e[47]||(e[47]=r(" • 前缀匹配: ",-1)),e[48]||(e[48]=s("code",null,"/api/*",-1)),e[49]||(e[49]=r(" - 匹配所有以 /api/ 开头的路径",-1)),e[50]||(e[50]=s("br",null,null,-1)),e[51]||(e[51]=r(" • 后缀匹配: ",-1)),e[52]||(e[52]=s("code",null,"*/users",-1)),e[53]||(e[53]=r(" - 匹配所有以 /users 结尾的路径 ",-1))])]),_:1}),t(T,{label:"路由配置模式",prop:"route_mode"},{default:a(()=>[t(_,{modelValue:c.value.route_mode,"onUpdate:modelValue":e[9]||(e[9]=o=>c.value.route_mode=o),placeholder:"选择路由模式",style:{width:"100%"}},{default:a(()=>[t(d,{label:"基础模式",value:"basic"},{default:a(()=>[...e[54]||(e[54]=[s("div",null,[s("div",null,"基础模式"),s("div",{style:{"font-size":"12px",color:"#999"}},"仅配置目的IP:PORT，自动匹配原始请求的URL后缀路径")],-1)])]),_:1}),t(d,{label:"完整模式",value:"full"},{default:a(()=>[...e[55]||(e[55]=[s("div",null,[s("div",null,"完整模式"),s("div",{style:{"font-size":"12px",color:"#999"}},"配置固定完整URL地址的路由转发")],-1)])]),_:1})]),_:1},8,["modelValue"]),e[56]||(e[56]=s("div",{class:"form-tip"},[s("strong",null,"基础模式"),r("：目标地址格式为 http://ip:port，请求时自动拼接原始URL路径"),s("br"),s("strong",null,"完整模式"),r("：目标地址为完整URL，请求时直接转发到指定地址 ")],-1))]),_:1}),t(T,{label:"目标地址",prop:"targets_json"},{default:a(()=>[t(C,{modelValue:c.value.targets_json,"onUpdate:modelValue":e[10]||(e[10]=o=>c.value.targets_json=o),placeholder:c.value.route_mode==="basic"?"例如: 192.168.1.100:8080":"例如: http://192.168.1.100:8080/api/v1"},null,8,["modelValue","placeholder"]),s("div",Ut,[c.value.route_mode==="basic"?(x(),V("span",Et," 基础模式：仅需配置IP和端口，系统会自动拼接原始请求路径 ")):(x(),V("span",kt," 完整模式：配置完整的目标URL地址，支持JSON格式的多目标配置 "))])]),_:1}),t(T,{label:"启用状态"},{default:a(()=>[t(oe,{modelValue:c.value.enabled,"onUpdate:modelValue":e[11]||(e[11]=o=>c.value.enabled=o),"active-text":"启用","inactive-text":"禁用"},null,8,["modelValue"]),e[57]||(e[57]=s("div",{class:"form-tip"}," 禁用的路由不会处理请求转发 ",-1))]),_:1}),t(T,{label:"描述"},{default:a(()=>[t(C,{modelValue:c.value.description,"onUpdate:modelValue":e[12]||(e[12]=o=>c.value.description=o),type:"textarea",rows:3,placeholder:"路由描述（可选）"},null,8,["modelValue"])]),_:1})]),_:1},8,["model"])]),_:1},8,["modelValue","title"]),t(re,{modelValue:G.value,"onUpdate:modelValue":e[17]||(e[17]=o=>G.value=o),title:"路由测试",width:"700px"},{default:a(()=>[$.value?(x(),V("div",zt,[s("div",Nt,[t(ue,{column:1,border:""},{default:a(()=>[t(L,{label:"服务器路径"},{default:a(()=>[r(i(j.value)+i($.value.server_path),1)]),_:1}),t(L,{label:"目标地址"},{default:a(()=>[r(i($.value.target_url),1)]),_:1}),t(L,{label:"关联客户端"},{default:a(()=>[r(i(_e($.value.client_id)),1)]),_:1})]),_:1})]),s("div",jt,[t(ne,{model:w.value,"label-width":"100px"},{default:a(()=>[t(T,{label:"请求方法"},{default:a(()=>[t(_,{modelValue:w.value.method,"onUpdate:modelValue":e[14]||(e[14]=o=>w.value.method=o),style:{width:"120px"}},{default:a(()=>[t(d,{label:"GET",value:"GET"}),t(d,{label:"POST",value:"POST"}),t(d,{label:"PUT",value:"PUT"}),t(d,{label:"DELETE",value:"DELETE"})]),_:1},8,["modelValue"])]),_:1}),t(T,{label:"请求头"},{default:a(()=>[t(C,{modelValue:w.value.headers,"onUpdate:modelValue":e[15]||(e[15]=o=>w.value.headers=o),type:"textarea",rows:3,placeholder:'例如: {"Content-Type": "application/json"}'},null,8,["modelValue"])]),_:1}),w.value.method!=="GET"?(x(),W(T,{key:0,label:"请求体"},{default:a(()=>[t(C,{modelValue:w.value.body,"onUpdate:modelValue":e[16]||(e[16]=o=>w.value.body=o),type:"textarea",rows:4,placeholder:"请求体内容"},null,8,["modelValue"])]),_:1})):I("",!0)]),_:1},8,["model"])]),s("div",Bt,[t(f,{type:"primary",onClick:De,loading:H.value},{default:a(()=>[t(u,null,{default:a(()=>[t(p(fe))]),_:1}),e[59]||(e[59]=r(" 执行测试 ",-1))]),_:1},8,["loading"])]),R.value?(x(),V("div",Lt,[e[61]||(e[61]=s("h4",null,"测试结果",-1)),t(ue,{column:2,border:""},{default:a(()=>[t(L,{label:"状态码"},{default:a(()=>[t(n,{type:R.value.status<400?"success":"danger"},{default:a(()=>[r(i(R.value.status),1)]),_:1},8,["type"])]),_:1}),t(L,{label:"响应时间"},{default:a(()=>[r(i(R.value.duration)+"ms ",1)]),_:1})]),_:1}),s("div",Pt,[e[60]||(e[60]=s("h5",null,"响应内容",-1)),t(C,{"model-value":R.value.response,type:"textarea",rows:8,readonly:""},null,8,["model-value"])])])):I("",!0)])):I("",!0)]),_:1},8,["modelValue"])])}}},qt=qe(Ft,[["__scopeId","data-v-bea65dd9"]]);export{qt as default};
